// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package app

import (
	"github.com/mkamadeus/iot-smart-retail/config"
	"github.com/mkamadeus/iot-smart-retail/external"
	"github.com/mkamadeus/iot-smart-retail/handler"
	user2 "github.com/mkamadeus/iot-smart-retail/handler/user"
	"github.com/mkamadeus/iot-smart-retail/service/user"
)

// Injectors from wire.go:

func InitializeApp() (*App, error) {
	serverConfig, err := config.NewServerConfig()
	if err != nil {
		return nil, err
	}
	cacheConfig := config.NewCacheConfig()
	databaseConfig := config.NewDatabaseConfig()
	mqttConfig := config.NewMQTTClientConfig()
	configConfig, err := config.New(serverConfig, cacheConfig, databaseConfig, mqttConfig)
	if err != nil {
		return nil, err
	}
	db, err := external.NewDB(configConfig)
	if err != nil {
		return nil, err
	}
	service := user.New(db)
	userHandler := user2.New(service)
	handlerHandler := handler.New(userHandler)
	app := NewFiberServer(handlerHandler)
	client, err := external.NewMQTTClient(configConfig)
	if err != nil {
		return nil, err
	}
	redisClient := external.NewCache(configConfig)
	appApp := NewApp(app, db, client, redisClient, configConfig)
	return appApp, nil
}
