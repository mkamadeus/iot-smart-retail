version: "3.8"
services:
  service:
    container_name: smart-retail-service
    build:
      context: ../
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    restart: always
    environment:
      - PORT=${PORT}
      - MQTT_SERVER_URL=${MQTT_SERVER_URL}
      - MQTT_CLIENT_ID=${MQTT_CLIENT_ID}
      - MQTT_TAP_TOPIC=${MQTT_TAP_TOPIC}
      - MQTT_REGISTER_TOPIC=${MQTT_REGISTER_TOPIC}
      - MQTT_DISPLAY_TOPIC=${MQTT_DISPLAY_TOPIC}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DATABASE=${POSTGRES_DATABASE}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    depends_on:
      - mosquitto
      - redis
      - postgres
    networks:
      - internal
  analysis:
    container_name: smart-retail-analysis
    build:
      context: ../analysis
      dockerfile: Dockerfile
    ports:
      - 80:8081
    restart: always
    environment:
      - SERVICE_URL=${SERVICE_HOST}
    depends_on:
      - service
    networks:
      - internal
  mosquitto:
    image: eclipse-mosquitto
    container_name: mosquitto
    ports:
      - 1883:1883
      - 9001:9001
    volumes:
      - ./config/mosquitto.conf:/mosquitto/config/mosquitto.conf
    networks:
      - internal
  redis:
    image: bitnami/redis:latest
    container_name: redis
    ports:
      - 6379:6379
    environment:
      - REDIS_PASSWORD=password
    networks:
      - internal
  postgres:
    image: postgres:alpine
    container_name: postgresdb
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DATABASE_HOST=${POSTGRES_HOST}
    networks:
      - internal
networks:
  internal:
    driver: bridge
